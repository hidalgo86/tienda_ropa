# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Producto con variantes por talla"""
type VariantType {
  """Talla de la variante"""
  size: Size!

  """Stock disponible para esta talla"""
  stock: Int!

  """Precio de esta talla"""
  price: Float!
}

enum Size {
  RN
  M3
  M6
  M9
  M12
  M18
  M24
  T2
  T3
  T4
  T5
  T6
  T7
  T8
  T9
  T10
  T12
}

"""Entidad del producto para consultas GraphQL"""
type ProductType {
  """ID del producto"""
  id: ID!

  """Nombre del producto"""
  name: String!

  """Descripción del producto"""
  description: String!

  """Género del producto"""
  genre: Genre

  """Variantes por talla (source of truth de inventario)"""
  variants: [VariantType!]

  """URL pública de la imagen"""
  imageUrl: String

  """Public ID de Cloudinary"""
  imagePublicId: String

  """Estado del producto (disponible/agotado/eliminado)"""
  status: ProductStatus

  """Fecha de creación"""
  createdAt: DateTime

  """Fecha de última actualización"""
  updatedAt: DateTime
}

enum Genre {
  NINA
  NINO
  UNISEX
}

enum ProductStatus {
  DISPONIBLE
  AGOTADO
  ELIMINADO
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Respuesta paginada de productos"""
type PaginatedProductType {
  """Elementos de la página actual"""
  items: [ProductType!]!

  """Total de elementos"""
  total: Int!

  """Número de página actual"""
  page: Int!

  """Total de páginas"""
  totalPages: Int!
}

type Query {
  product(id: String!): ProductType
  products(input: ProductsQueryInput): PaginatedProductType!
  adminProducts(input: ProductsQueryInput): PaginatedProductType!
}

"""Entrada de consulta para listar productos"""
input ProductsQueryInput {
  filters: ProductFilterInput
  pagination: PaginationInput
  sort: ProductsSort
}

"""Filtros de búsqueda de productos"""
input ProductFilterInput {
  name: String
  genre: Genre
  sizes: [Size!]
  minPrice: Float
  maxPrice: Float
  status: ProductStatus
}

"""Parámetros de paginación"""
input PaginationInput {
  page: Int! = 1
  limit: Int! = 20
}

enum ProductsSort {
  NAME_ASC
  NAME_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  PRICE_MIN_ASC
  PRICE_MIN_DESC
  STOCK_TOTAL_ASC
  STOCK_TOTAL_DESC
}